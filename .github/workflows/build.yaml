name: Build
on:
  - push
jobs:
  build_ffmpeg:
    name: Build FFmpeg
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - armhf
          - arm64
        include:
          - architecture: armhf
            docker_platform: linux/arm/v7
            suffix: "-rpi"
            volumes: '["/tmp/node20:/__e/node20"]'
          - architecture: arm64
            docker_platform: linux/arm64
            suffix: ""
            volumes: "[]"
    runs-on: ubuntu-24.04-arm
    container:
      image: ghcr.io/sigmaris/ffmpegbuilder:trixie
      options: --platform ${{ matrix.docker_platform }}
      volumes: ${{ fromJSON(matrix.volumes) }}
    env:
      DEB_ARCH: "${{ matrix.architecture }}"
      OUR_REV: "1"
      PATCH_DIR: "patches${{ matrix.suffix }}"
    steps:
      - name: Work around https://github.com/actions/upload-artifact/issues/616
        if: matrix.architecture == 'armhf'
        run: |
          ls -lar /__e/node20
          curl -Lo /tmp/node.tar.gz https://unofficial-builds.nodejs.org/download/release/v20.18.3/node-v20.18.3-linux-armv6l.tar.gz
          cd /__e/node20
          tar -x --strip-components=1 -f /tmp/node.tar.gz
          ls -lar /__e/node20/bin

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: builder-src

      - name: Prepare source
        run: |
          sudo apt-get update
          rm -rf build
          mkdir build
          cd build
          ../builder-src/prepare.sh
          if [ "$DEB_ARCH" = "arm64" ]
          then
            # Install linux headers for NV15 & NV20 support
            wget https://github.com/sigmaris/linux/releases/download/6.14.5-rockpro64-ci/linux-libc-dev_6.14.5-1_arm64.deb
            sudo apt-get -y --allow-downgrades install ./linux-libc-dev_6.14.5-1_arm64.deb
            rm ./linux-libc-dev_6.14.5-1_arm64.deb
          else
            sudo apt-get -y install linux-libc-dev
          fi

      - name: Build packages
        run: |
          cd build
          ../builder-src/build.sh

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "ffmpeg-debs${{ matrix.suffix }}"
          path: build/*.deb

  release:
    runs-on: ubuntu-24.04
    needs: build_ffmpeg
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg-debs
          path: ffmpeg-debs

      - name: Upload packages to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffmpeg-debs/*
          tag: ${{ github.ref }}
          file_glob: true
