From: Jonas Karlman <jonas@kwiboo.se>
Date: Sat, 4 Nov 2023 21:14:21 +0000
Subject: [10/11] swscale/input: Add support for NV15, NV20BS and NV30
Origin: https://github.com/Kwiboo/FFmpeg/commit/a5c4b98ddd2b5ba14ab04a3cac0df44ab0672644

Add input support for NV15, NV20BS and NV30 pix fmt.

Signed-off-by: Jonas Karlman <jonas@kwiboo.se>
---
 libswscale/input.c | 39 +++++++++++++++++++++++++++++++++++++++
 libswscale/utils.c |  3 +++
 2 files changed, 42 insertions(+)

diff --git a/libswscale/input.c b/libswscale/input.c
index d171394bb2..31bb124868 100644
--- a/libswscale/input.c
+++ b/libswscale/input.c
@@ -793,6 +793,35 @@ static void nv21ToUV_c(uint8_t *dstU, uint8_t *dstV,
     nvXXtoUV_c(dstV, dstU, src1, width);
 }
 
+static av_always_inline void nv15ToX_c(uint8_t *dst, const uint8_t *src, int pos)
+{
+    int shift = (pos & 3) << 1;
+    pos = (pos * 5) >> 2;
+    AV_WN16(dst, ((src[pos + 0] >> shift) |
+                  (src[pos + 1] << (8 - shift))) & 0x3ff);
+}
+
+static void nv15ToY_c(uint8_t *dst, const uint8_t *src,
+                      const uint8_t *unused1, const uint8_t *unused2,
+                      int width, uint32_t *unused, void *opq)
+{
+    int i;
+    for (i = 0; i < width; i++) {
+        nv15ToX_c(dst + i * 2, src, i);
+    }
+}
+
+static void nv15ToUV_c(uint8_t *dstU, uint8_t *dstV,
+                       const uint8_t *unused0, const uint8_t *src1, const uint8_t *src2,
+                       int width, uint32_t *unused, void *opq)
+{
+    int i;
+    for (i = 0; i < width; i++) {
+        nv15ToX_c(dstU + i * 2, src1, i * 2 + 0);
+        nv15ToX_c(dstV + i * 2, src1, i * 2 + 1);
+    }
+}
+
 #define p01x_uv_wrapper(bits, shift) \
     static void p0 ## bits ## LEToUV_c(uint8_t *dstU, uint8_t *dstV,     \
                                        const uint8_t *unused0,           \
@@ -1444,6 +1473,11 @@ av_cold void ff_sws_init_input_funcs(SwsContext *c)
     case AV_PIX_FMT_XV36LE:
         c->chrToYV12 = read_xv36le_UV_c;
         break;
+    case AV_PIX_FMT_NV15:
+    case AV_PIX_FMT_NV20BS:
+    case AV_PIX_FMT_NV30:
+        c->chrToYV12 = nv15ToUV_c;
+        break;
     case AV_PIX_FMT_P010LE:
     case AV_PIX_FMT_P210LE:
     case AV_PIX_FMT_P410LE:
@@ -1944,6 +1978,11 @@ av_cold void ff_sws_init_input_funcs(SwsContext *c)
     case AV_PIX_FMT_BGRA64LE:
         c->lumToYV12 = bgr64LEToY_c;
         break;
+    case AV_PIX_FMT_NV15:
+    case AV_PIX_FMT_NV20BS:
+    case AV_PIX_FMT_NV30:
+        c->lumToYV12 = nv15ToY_c;
+        break;
     case AV_PIX_FMT_P010LE:
     case AV_PIX_FMT_P210LE:
     case AV_PIX_FMT_P410LE:
diff --git a/libswscale/utils.c b/libswscale/utils.c
index c3154d82c1..beef442600 100644
--- a/libswscale/utils.c
+++ b/libswscale/utils.c
@@ -231,6 +231,9 @@ static const FormatEntry format_entries[] = {
     [AV_PIX_FMT_XYZ12BE]     = { 1, 1, 1 },
     [AV_PIX_FMT_XYZ12LE]     = { 1, 1, 1 },
     [AV_PIX_FMT_AYUV64LE]    = { 1, 1},
+    [AV_PIX_FMT_NV15]        = { 1, 0 },
+    [AV_PIX_FMT_NV20BS]      = { 1, 0 },
+    [AV_PIX_FMT_NV30]        = { 1, 0 },
     [AV_PIX_FMT_P010LE]      = { 1, 1 },
     [AV_PIX_FMT_P010BE]      = { 1, 1 },
     [AV_PIX_FMT_P012LE]      = { 1, 1 },
-- 
2.45.2

